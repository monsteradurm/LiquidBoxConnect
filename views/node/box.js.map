{"version":3,"sources":["box.jsx"],"names":["BoxURL","onRequestError","err","console","log","FileItem","item","setDisplayItem","thumbnail","setThumbnail","base64String","setBase64String","method","url","id","then","res","data","file","btoa","String","fromCharCode","Uint8Array","catch","location","name","FolderItem","setCurrentFolderId","pageRoot","faFolder","fontSize","color","DisplayLoading","message","width","margin","padding","DisplayError","NavigationCrumbs","boxCrumbs","map","crumb","box","properties","setProperties","title","spaceKey","currentFolderId","setBoxCrumbs","boxRoot","setBoxRoot","setPageRoot","page","setPage","projectId","setProjectId","files","setFiles","folders","setFolders","fetching","setFetching","errorMsg","setErrorMsg","displayItem","shared_link","window","open","props","AP","request","success","result","JSON","parse","value","root","_","find","entries","e","error","path_collection","crumbIndex","findIndex","c","crumbs","splice","folderEntries","forEach","filter","type","folder","rootIndex","f","push"],"mappings":"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","file":"box.js","sourceRoot":"..","sourcesContent":["import React, { useState, useEffect, Fragment } from 'react';\n\n// Atlaskit\nimport Button from '@atlaskit/button/standard-button';\nimport Breadcrumbs, { BreadcrumbsItem } from '@atlaskit/breadcrumbs';\nimport { FolderFilledIcon, DocumentFilledIcon } from '@atlaskit/icon/glyph/folder-filled';\nimport Spinner from '@atlaskit/spinner';\n\n//other\nimport axios from 'axios';\nimport useFetch from 'react-fetch-hook';\nimport ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFolder } from '@fortawesome/free-solid-svg-icons'\nimport { SpinnerDiamond } from 'spinners-react';\nimport EmptyState from '@atlaskit/empty-state';\n\nimport * as _ from 'underscore';\n\n//css\nimport \"./styles.css\";\n\nconst BoxURL = \"https://www.liquidanimation.live/box-rest\"\nconst onRequestError = (err) => { \n  console.log(\"Request\", err)\n}\n\nconst FileItem = ({item, setDisplayItem}) => {\n  const [thumbnail, setThumbnail] = useState(null);\n  const [base64String, setBase64String] = useState(null);\n\n  useEffect(() => {\n    if (item)\n      axios({\n          method: 'get',\n          url: \"https://liquidanimation.live/box-rest/thumbnail?id=\" + item.id\n          }).then((res) => {\n            setThumbnail(res.data);\n            if (res.data.file && res.data.file.data)\n              setBase64String(btoa(String.fromCharCode(...new Uint8Array(res.data.file.data))));\n        })\n        .catch(err => onRequestError(err))\n  }, [])\n  \n    return <div className=\"box-file-container bow-row\">\n              {\n                base64String && \n                  <img src={`data:image/png;base64,${base64String}`} alt=\"\"/>\n                  \n              }\n              {\n                thumbnail && thumbnail.location && \n                  <img src={thumbnail.location} /> \n              }\n              <div className=\"box-file\" onClick={() => setDisplayItem(item)}>{item.name}</div>\n            </div>\n}\n\nconst FolderItem = ({item, setCurrentFolderId, pageRoot}) => {\n  return <div className=\"box-folder-container bow-row\" onClick={() => {\n            setCurrentFolderId(item.id);\n          }}>\n            <FontAwesomeIcon icon={faFolder} style={{fontSize: 25 + 'px', color: 'inherit'}}/>\n            <div className=\"box-folder\">{item.name}</div>\n          </div>\n}\n\nconst DisplayLoading = ({message}) => {\n  return <div style={{width: '100%'}}>\n              <div style={{margin: 'auto', width: 'fit-content', padding: 20 + 'px'}}>\n                <Spinner size=\"xlarge\" />\n              </div>\n              <div style={{margin: 'auto', width: 'fit-content'}}>\n                <div style={{margin: 'auto'}}>\n                  <EmptyState header={message} />\n                </div>\n              </div>\n            </div>  \n}\n\nconst DisplayError = ({message}) => {\n  return <div style={{width: '100%'}}>\n              <div style={{margin: 'auto', width: 'fit-content'}}>\n                <div style={{margin: 'auto'}}>\n                  <EmptyState header={message} />\n                </div>\n              </div>\n            </div>  \n}\n\nconst NavigationCrumbs = ({setCurrentFolderId, boxCrumbs}) => {\n  return <Breadcrumbs>\n            {\n                boxCrumbs.map(crumb => (<BreadcrumbsItem key={crumb.id + '_crumb'} \n                text={crumb.name} \n                onClick={() => setCurrentFolderId(crumb.id)}/>)   \n                )\n            }  \n        </Breadcrumbs>\n}\n\nexport default function box() {\n  const [properties, setProperties] = useState({ title: null, spaceKey: null});\n  const [currentFolderId, setCurrentFolderId] = useState(null);\n  const [boxCrumbs, setBoxCrumbs] = useState([]);\n  const [boxRoot, setBoxRoot] = useState(null);\n  const [pageRoot, setPageRoot] = useState(null);\n\n  const [page, setPage] = useState(null);\n  const [projectId, setProjectId] = useState(null);\n  const [files, setFiles] = useState([]);\n  const [folders, setFolders] = useState([]);\n  const [fetching, setFetching] = useState(true);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [displayItem, setDisplayItem] = useState(null)\n\n    useEffect(() => {\n      if (displayItem && displayItem.shared_link && displayItem.shared_link.url) {\n        window.open(displayItem.shared_link.url, \"_blank\");\n      } else if (displayItem) {\n        axios({\n          method: 'get',\n          url: \"https://liquidanimation.live/box-rest/sharedFile?id=\" + displayItem.id\n          }).then((res) => {\n            window.open(res.data.shared_link.url, \"_blank\");\n        })\n        .catch(err => onRequestError(err))\n      }\n    },[displayItem])\n  \n\n   useEffect(() => {\n    setPage(props.title);\n    setProjectId(props.spaceKey);\n\n    AP.request({\n      url: '/rest/api/space/' + props.spaceKey + '/property/forge-BoxRoot',\n      success: (res) => { \n        const result = JSON.parse(res);\n        setBoxRoot(result.value);\n        axios({\n            method: 'get',\n            url: \"https://liquidanimation.live/box-rest/folderItems?root=\" + result.value\n            }).then((res) => {\n              const root = _.find(res.data.entries, (e) => e.name == props.title);\n              if (!root) {\n                setErrorMsg(\"Box Folder: \" + '\"' + props.title + '\"' + \" could not be found!\");\n              } else {\n                setPageRoot(root.id);\n                setCurrentFolderId(root.id);\n              }\n          })\n          .catch(err => onRequestError(err))\n      },\n      error: onRequestError \n    });\n  }, []);\n  \n  useEffect(() => {\n    if (currentFolderId)\n     axios({\n        method: 'get',\n        url: \"https://liquidanimation.live/box-rest/folderInfo?id=\" + currentFolderId\n        }).then((res) => {\n\n            if (!pageRoot || currentFolderId == pageRoot) {\n              console.log(\"Root Directory\");\n              setBoxCrumbs([{id: res.data.id, name: res.data.name}]);\n            }\n\n            const entries = res.data.path_collection.entries;\n            const crumbIndex = _.findIndex(entries, (c) => c.id == pageRoot);\n            if (crumbIndex < 0)\n              setBoxCrumbs([{id: res.data.id, name: res.data.name}]);\n            else {\n              const crumbs = [...[...entries].splice(crumbIndex), {id:res.data.id, name:res.data.name}];\n              setBoxCrumbs(crumbs);\n              console.log(entries, crumbIndex, crumbs);\n            }\n\n        })\n      .catch(err => onRequestError(err))\n  }, [currentFolderId]);\n\n  useEffect(() => {\n    if (currentFolderId) {\n      setFetching(true);\n\n      axios({\n        method: 'get',\n        url: \"https://liquidanimation.live/box-rest/folderItems?root=\" + currentFolderId\n        }).then((res) => {\n          \n          const folderEntries = []\n          _.forEach(res.data.entries.filter(item => item.type == 'folder'), (folder) => {\n            const rootIndex = _.findIndex(folder.path_collection.entries, (f) => f.id == boxRoot);\n            folder['crumbs'] = [...folder.path_collection.entries.splice(rootIndex + 1), {id: folder.id, name: folder.name}];\n            folderEntries.push(folder);\n          });\n\n          setFolders(folderEntries);\n          setFiles(res.data.entries.filter(item => item.type == 'file'));\n          setFetching(false);\n      })\n      .catch(err => onRequestError(err))\n    }\n  }, [currentFolderId]);\n  \n  if (errorMsg)\n    return <DisplayError message={errorMsg} />\n\n  else if (fetching && !pageRoot) \n    return <DisplayLoading message=\"Connecting to Box...\" />\n\n  return <Fragment> \n                <NavigationCrumbs setCurrentFolderId={setCurrentFolderId} \n                                page={page}\n                                boxCrumbs={boxCrumbs} \n                                pageRoot={pageRoot} />\n                {\n                  fetching &&\n                    <DisplayLoading message=\"Fetching Box Data...\"/>\n                }\n                {\n                  !fetching &&\n                      folders.map(item => (<FolderItem key={item.id + '_folder'}\n                      item={item} \n                      setCurrentFolderId={setCurrentFolderId}\n                      />))\n                }\n                { \n                  !fetching &&\n                      files.map(item => (<FileItem key={item.id + '_file'}\n                      item={item}\n                      setDisplayItem={setDisplayItem}\n                      />))\n                }\n            </Fragment>;\n}\n"]}